/*
title : _common 프로젝트 기초 스크립트
최초작성 : 2017.09.18 
최초작성자 : 최찬무
*/
var JYPE = (function () {
    var instance;

    return {

        //#region e-mail 정규식 체크
        emailRegExp: function (arg) {
            var regExp = /[0-9a-zA-Z][_0-9a-zA-Z-]*@[_0-9a-zA-Z-]+(\.[_0-9a-zA-Z-]+){1,2}$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion

        //#region Password 정규식 체크 
        pwdRegExp: function (arg) {
            var regExp = /^.*(?=^.{6,20}$)(?=.*\d)(?=.*[a-zA-Z])(?=.*[!@#$%^+=]).*$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion

        //#region 인증코드 정규식 체크
        tokenRegExp: function (arg) {
            var regExp = /^[0-9]{6}$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion

        //#region 숫자 정규식 체크
        numberRegExp: function (arg) {
            var regExp = /^[0-9]*$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion

        //#region 숫자 제외 정규식 체크
        notNumberRegExp: function (arg) {
            var regExp = /[^0-9]+$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion


        //#region 알파벳 정규식 체크
        engRegExp: function (arg) {
            var regExp = /^[a-zA-Z]+$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion

        //#region 한글 정규식 체크
        hangulRegExp: function (arg) {
            var regExp = /^[가-힣ㄱ-ㅎㅏ-ㅣ\x20]+$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion

        //#region 한글 정규식 체크
        enghangulRegExp: function (arg) {
            var regExp = /^[a-zA-Z가-힣ㄱ-ㅎㅏ-ㅣ\x20]+$/;

            if (!arg.match(regExp))
                instance = false;
            else
                instance = true;

            return instance;
        },
        //#endregion

        //#region 브라우저 체크
        browserCheck: function () {
            var agent = navigator.userAgent.toLocaleLowerCase();
            instance = agent;

            return instance;
        },
        //#endregion

        //#region 쿠키생성
        setCookie: function (cookie_name, value, exdays) {
            var exdate = new Date();
            exdate.setDate(exdate.getDate() + exdays);
            var cookieValue = escape(value) + ((exdays == null) ? "" : "; expires=" + exdate.toGMTString());
            document.cookie = cookie_name + "=" + cookieValue;
        },
        //#endregion

        //#region 쿠키삭제
        deleteCookie: function (cookie_name) {
            var expireDate = new Date();
            expireDate.setDate(expireDate.getDate() - 1);
            document.cookie = cookie_name + "= " + "; expires=" + expireDate.toGMTString();
        },
        //#endregion

        //#region 쿠키정보 호출
        getCookie: function (cookie_name) {
            cookie_name = cookie_name + '=';
            var cookieData = document.cookie;
            var start = cookieData.indexOf(cookie_name);
            var cookieValue = '';

            if (start != -1) {
                start += cookie_name.length;
                var end = cookieData.indexOf(';', start);
                if (end == -1) end = cookieData.length;
                cookieValue = cookieData.substring(start, end);
            }

            instance = cookieValue;

            return instance;
        },
        //#endregion

        //#region Timer
        timerDisplay: function (min, sec) {
            var disp;
            if (min <= 9) disp = " 0";
            else disp = " ";

            if (min >= 60) {
                hour = parseInt(min / 60);

                if (hour >= 24) {
                    day = parseInt(hour / 24);
                    disp += day + "일 " + (hour % 24) + "시간 " + parseInt(min % 60) + "분 ";
                }
                else {
                    disp += hour + "시간 " + parseInt(min % 60) + "분 ";
                }
            }
            else {
                disp += min + "분 ";
            }

            if (sec <= 9) disp += "0" + sec + "초";
            else disp += sec + "초";

            return (disp);
        },
        //#endregion

        //#region 형식변환 1->01
        zeroPad: function (nr, base) {
            var len = (String(base).length - String(nr).length) + 1;
            return len > 0 ? new Array(len).join('0') + nr : nr;
        },
        //#endregion

        //#region 숫자만 입력하게 처리
        numObj: function (arg) {
            if (event.keyCode >= 48 && event.keyCode <= 57) { return true; } else { event.returnValue = false; }
        },
        //#endregion

        //#region 모달 팝업 닫기
        fancyboxClose: function () {
            parent.jQuery.fancybox.close();
        },
        //#endregion

        //#region 문자열 비교
        txtCompare: function (oldTxt, newTxt) {
            var IsFlag = false;

            if (oldTxt == newTxt)
                IsFlag = true;

            instance = IsFlag;

            return instance;
        },
        //#endregion

        //#region 애널리틱스
        analytics: function (code) {
            var _gaq = _gaq || [];
            _gaq.push(['_setAccount', code]);
            _gaq.push(['_trackPageview']);

            (function () {
                var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;

                ga.src = ('https:' == document.location.protocol ? 'https://' : 'http://') + 'stats.g.doubleclick.net/dc.js';

                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
            })();
        },
        //#endregion

        //#region change input background color
        SetBackgroundColorByInput: function () {
            $("input[type='text'], input[type='password'],input[type='number']").focus(function () {
                $(this).css("background-color", "#FAF9F9")
            }).focusout(function () {
                $(this).css("background-color", "white")

            });
        },

        //#region mouseover background color
        SetBackgroundColorMouseOver: function (id) {
            $(id).mouseover(function () {
                $(this).css("background-color", "#FAF9F9")
            }).mouseout(function () {
                $(this).css("background-color", "white")

            });
        },
        //#endregion

        //#region FancyBox Open
        FancyBox: function (url, w, h, scrollYes) {

            $.fancybox.open({
                'src': url,
                'padding': 0,
                'speedIn': 500,
                'speedOut': 200,
                'width': w,
                'height': h,
                'type': 'iframe',
                'scrolling': scrollYes,
                'centerOnScroll': false,
                'showCloseButton': false,
                'hideOnOverlayClick': false,
                'hideOnContentClick': false
            });
        },
        //#endregion

        //#region Jquery Ajax 
        Ajax: function (call_uri, dataToSend) {
            $.ajax({
                type: "POST",
                async: false,
                url: call_uri,
                data: dataToSend,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (msg) {
                    instance = msg;
                },
                error: function (msg) {
                    instance = msg;
                }
            });

            return instance;
        },
        //#endregion

        //#region Jquery Ajax 
        AjaxP: function (call_uri, dataToSend, proc) {
            $.ajax({
                type: "POST",
                async: false,
                url: call_uri,
                data: dataToSend,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: proc,
                error: function (msg) {
                    instance = msg;
                }
            });

            return instance;
        },
        //#endregion


        //#region Jquery Ajax JsonP
        AjaxJsonP: function (call_url, dataToSend, proc) {
            $.ajax({
                type: "POST",
                async: false,
                url: call_uri,
                data: dataToSend,
                contentType: "application/json; charset=utf-8",
                dataType: "jsonp",
                jsonpCallback: "jsonpCallback",
                success: proc,
                error: function (msg) {
                    instance = msg;
                }
            });

            return instance;
        },
        //#endregion

        //#region Jquery Ajax Form
        AjaxForm: function (objForm, proc) {
            var form = objForm;

            $.ajax({
                cache: false,
                async: true,
                type: "POST",
                url: form.attr('action'),
                data: form.serialize(),
                success: proc,
                error: function (xhr, status, errorThrown) {
                    alert(errorThrown + '\n' + status + '\n' + xhr.statusText);
                }
            });
        },
        //#endregion

        //#region Jquery Ajax Select
        AjaxSelect: function (id, call_url, param, initname) {
            $(id).empty();
            $(id).append($("<option></option>").val("").html(initName));

            ajaxCallback(call_url, param, function (data) {
                var item = $(id);
                //초기화
                item.empty();
                item.append($("<option></option>").val("").html(initName));
                $.each(data, function () {
                    if (this.Selected == true) {
                        item.append($("<option selected></option>").val(this.Value).html(this.Text));
                    }
                    else {
                        item.append($("<option></option>").val(this.Value).html(this.Text));
                    }
                });

            });

        },
        //#endregion

        //#region Replace String By All
        ReplaceAll: function (str, searchStr, replaceStr) {
            try {
                return str.split(searchStr).join(replaceStr);
            }
            catch (e) {

                return str;
            }

        },
        //#endregion

        //#region Mobile Browser YN
        detectMobileBrowserYN: function () {
            var agent = navigator.userAgent || navigator.vendor || window.opera;

            if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(agent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(agent.substr(0, 4))) {
                instance = "Y";
            } else {
                instance = "N";
            }

            return instance;
        },
        //#endregion

        //#region Validation Rule ID
        validCheckUserID: function (obj, msg) {
            var value = $.trim(obj.val());
            var result = false;
            var resultMessage = "";

            var checkCount = 0;

            if (value.length == 0) {
                resultMessage = msg;
                result = false;
            } else {

                if (value.length < 6 || /[^a-zA-Z0-9]/gi.test(value)) {
                    resultMessage = msg;
                    result = false;
                } else {
                    resultMessage = "";
                    result = true;
                }
            }

            return {
                result: result,
                resultMessage: resultMessage
            };
        },
        //#endregion

        //#region Validation Rule PW
        validCheckPassword: function (obj, msg) {
            var value = $.trim(obj.val());
            var result = false;
            var resultMessage = "";

            var checkCount = 0;

            if (value.length == 0) {
                resultMessage = msg;
                result = false;
            } else {

                //영문+숫자+특수기호 포함 8자리 이상
                if (/[a-zA-Z]/.test(value)) {
                    checkCount += 1;
                }

                if (/[0-9]/.test(value)) {
                    checkCount += 1;
                }

                if (/[\W|\s]/.test(value)) {
                    checkCount += 1;
                }

                if (checkCount < 3 || value.length < 8 || value.length > 15) {
                    resultMessage = msg;
                    result = false;
                } else {
                    resultMessage = "";
                    result = true;
                }
            }

            return {
                result: result,
                resultMessage: resultMessage
            };
        },
        //#endregion

        //#region Window Open
        WindowOpen: function (url, name, width, height, yes) {
            var obj = window.open(url, name, 'width=' + width + ', height=' + height + ', left=0, top=0, scrollbars=' + yes + ', resizeable=no, menubar=no, location=no, status=no, modal=yes');
            obj.focus();
        },

        //#endregion

        //#region Get CheckBox Values 
        getCheckBoxValue: function (name) {
            var v = '';

            $(name + ":checkbox").each(function () {
                if ($(this).is(":checked")) {
                    v += $(this).val() + ',';
                }
            });

            instance = v.substr(0, v.length - 1);

            return instance;
        },
        //#endregion

        //#region Validation Init 설정
        ValidationInit: function () {
            $.validator.setDefaults({
                onkeyup: false,
                onclick: false,
                onfocusout: false,
                showErrors: function (errorMap, errorList) {
                    if (this.numberOfInvalids()) { // 에러가 있을 때만..

                        alert(errorList[0].message);
                        try {
                            errorList[0].element.focus();
                        }
                        catch (e) {
                        }

                    }
                }
            });


            //사용자정의
            $.validator.addMethod("alphans", function (value, element) { //숫자 + 알파 + 특수기호
                var checkCount = 0;
                var result = false;

                //영문+숫자+특수기호 포함 8자리 이상
                if (/[a-zA-Z]/.test(value)) {
                    checkCount += 1;
                }

                if (/[0-9]/.test(value)) {
                    checkCount += 1;
                }

                if (/[\W|\s]/.test(value)) {
                    checkCount += 1;
                }

                if (checkCount < 3 || value.length < 8 || value.length > 15) {
                    result = false;
                } else {
                    result = true;
                }
                return this.optional(element) || result;
            });


            $.validator.addMethod("alphanumeric", function (value, element) { //알파벳숫자
                return this.optional(element) || /^[a-zA-Z0-9]+$/.test(value);
            });

            $.validator.addMethod("numeric", function (value, element) { //숫자
                return this.optional(element) || /^[0-9]+$/.test(value);
            });

            $.validator.addMethod("notnumeric", function (value, element) { //숫자
                return this.optional(element) || /[^0-9]+$/.test(value);
            });

            $.validator.addMethod("hangul", function (value, element) { //한글
                return this.optional(element) || /^[가-힣ㄱ-ㅎㅏ-ㅣ\x20]+$/.test(value);
            });


            $.validator.addMethod("enghangul", function (value, element) { //한글영어
                return this.optional(element) || /^[a-zA-Z가-힣ㄱ-ㅎㅏ-ㅣ\x20]+$/.test(value);
            });

            $.validator.addMethod("eng", function (value, element) { //영어
                return this.optional(element) || /^[a-zA-Z]+$/.test(value);
            });

            $.validator.addMethod("valueNotEquals", function (value, element, arg) {
                // I use element.value instead value here, value parameter was always null
                return arg != element.value;
            }, "Value must not equal arg.");
        },
        //#endregion

        //#region Datepicker Init 설정
        DatepickerInit: function () {
            $.datepicker.setDefaults({
                closeText: '닫기',
                prevText: '이전달',
                nextText: '다음달',
                currentText: '오늘',
                monthNames: ['1월(JAN)', '2월(FEB)', '3월(MAR)', '4월(APR)', '5월(MAY)', '6월(JUM)', '7월(JUL)', '8월(AUG)', '9월(SEP)', '10월(OCT)', '11월(NOV)', '12월(DEC)'],
                monthNamesShort: ['1월', '2월', '3월', '4월', '5월', '6월', '7월', '8월', '9월', '10월', '11월', '12월'],
                dayNames: ['일', '월', '화', '수', '목', '금', '토'],
                dayNamesShort: ['일', '월', '화', '수', '목', '금', '토'],
                dayNamesMin: ['일', '월', '화', '수', '목', '금', '토'],
                weekHeader: 'Wk',
                buttonImage: '/Content/icon_calendar.gif',
                showMonthAfterYear: true,
                dateFormat: 'yy-mm-dd',
                buttonImageOnly: true,
                buttonText: "달력",
                buttonImageOnly: true
            });
        },
        //#endregion

        //#region Datapicker Set
        SetDatepicker: function (id, format) {

            if (format == '' || format == undefined) {
                format = 'yy-mm-dd';
            }

            try {
                $(id).datepicker({
                    changeMonth: true,
                    changeYear: true,
                    dateFormat: format,
                    showOn: "button",
                    buttonImage: "/Content/images/icon_calendar.gif",
                    buttonImageOnly: true
                });
            }
            catch (e) {

            }
        },

        //#endregion

        //#region Console Log
        log: function (name, msg) {

            try {
                console.log(name, msg);

                instance = msg;

            } catch (e) {
                instance = e.msg;
            }

            return instance;
        }
        //#endregion

    }
})();

//#region 확장
$(function () {
    //#region 한글만 입력
    $.fn.onlyHangul = function (options) {
        var opt = {
            msg: '한글만 입력가능 합니다.',
            isAlert: true
        }

        $.extend(opt, options);

        return $(this).each(function () {
            $(this).bind("keyup", function (event) {
                var regexp = /[a-z0-9]|[ \[\]{}()<>?|`~!@("@")#$%^&*-_+=,.;:\"'\\]/g;

                var v = $(this).val();

                if (regexp.test(v)) {
                    if (opt.isAlert) {
                        alert(opt.msg);
                    }

                    $(this).val(v.replace(regexp, ''));

                }
            });
        });

    }
    //#endregion
    //#region 영어만 입력
    $.fn.onlyEng = function (options) {
        var opt = {
            msg: '영어만 입력가능 합니다.',
            isAlert: true
        }

        $.extend(opt, options);

        return $(this).each(function () {
            $(this).bind("keyup", function (event) {
                var regexp = /[^a-zA-Z]/gi;
                var v = $(this).val();
                if (regexp.test(v)) {
                    if (opt.isAlert) {
                        alert(opt.msg);
                    }

                    $(this).val(v.replace(regexp, ''));

                }
            });
        });

    }
    //#endregion

    //#region 숫자만 입력
    $.fn.onlyNumber = function (options) {
        var opt = {
            msg: '숫자만 입력가능 합니다.',
            isAlert: true
        }

        $.extend(opt, options);

        return $(this).each(function () {
            $(this).bind("keyup", function (event) {
                var regexp = /[^0-9]/gi;
                var v = $(this).val();

                if (regexp.test(v)) {
                    if (opt.isAlert) {
                        alert(opt.msg);
                    }

                    $(this).val(v.replace(regexp, ''));

                }
            });
        });

    }
    //#endregion

    //#region 알파벳숫자만 입력
    $.fn.onlyEngNumber = function (options) {
        var opt = {
            msg: '알파벳 숫자만 입력가능 합니다.',
            isAlert: true
        }

        $.extend(opt, options);

        return $(this).each(function () {
            $(this).bind("keyup", function (event) {
                var regexp = /[^a-zA-Z0-9]/gi;
                var v = $(this).val();

                if (regexp.test(v)) {
                    if (opt.isAlert) {
                        alert(opt.msg);
                    }

                    $(this).val(v.replace(regexp, ''));

                }
            });
        });

    }
    //#endregion

    //#region 알파벳숫자특수기호만 입력
    $.fn.onlyEngNumberSpecial = function (options) {
        var opt = {
            msg: '알파벳 숫자 특수기호만 입력가능 합니다.',
            isAlert: true
        }

        $.extend(opt, options);

        return $(this).each(function () {
            $(this).bind("keyup", function (event) {
                var regexp = /[^a-zA-Z0-9]*[^\[\]{}()<>?|`~!@("@")#$%^&*-_+=,.;:\"'\\]/gi;
                var v = $(this).val();

                if (regexp.test(v)) {
                    if (opt.isAlert) {
                        alert(opt.msg);
                    }

                    $(this).val(v.replace(regexp, ''));

                }
            });
        });

    }
    //#endregion

    //#region 숫자 4자리 입력
    $.fn.onlyNumberFour = function (options) {
        var opt = {
            msg: '숫자 4자리 까지만 입력가능 합니다.',
            isAlert: true
        }

        $.extend(opt, options);

        return $(this).each(function () {
            $(this).bind("keyup", function (event) {
                var regexp = /\d\d\d\d{2,4}/gi;

                var v = $(this).val();

                if (regexp.test(v)) {
                    if (opt.isAlert) {
                        alert(opt.msg);
                    }

                    $(this).val(v.replace(regexp, ''));

                }
            });
        });

    }
    //#endregion

});

//#endregion




